package com.memento.flash.display {	import flash.events.Event;	import flash.events.MouseEvent;	import flash.display.Sprite;	import flash.text.AntiAliasType;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;	public class PrimitiveButton extends Sprite {		public var data:*;		private const _disabledColor:Number  = 0x555555;		private const _enabledColor:Number   = 0x000000;		private const _selectionColor:Number = 0x000000;		private var _label:TextField;		private var _selection:Sprite;		public function PrimitiveButton(menuStr:String):void {			var format:TextFormat = new TextFormat();			format.size           = 14;			format.bold           = true;			_label               = new TextField();			_label.mouseEnabled  = false;			_label.multiline     = false;			//_label.embedFonts    = true;			_label.cacheAsBitmap = true;			_label.antiAliasType = AntiAliasType.NORMAL;			_label.autoSize      = TextFieldAutoSize.LEFT;			_label.textColor     = _disabledColor;			_label.x             = 4;			_label.text          = menuStr;			_label.setTextFormat(format);			addChild(_label);			_selection              = new Sprite();			_selection.mouseEnabled = false;			_selection.y            = 18;			_selection.alpha        = 0;			with (_selection.graphics) {				lineStyle(0, 0, 0);				beginFill(_selectionColor, 1);				drawRect(0, 0, _label.width+8, 4);				endFill();			}			addChild(_selection);			var hit:Sprite = new Sprite();			with (hit.graphics) {				lineStyle(0, 0, 0);				beginFill(0, 0);				drawRect(0, 0, _selection.width, _selection.y+_selection.height);				endFill();			}			addChild(hit);			hit.addEventListener(MouseEvent.MOUSE_OVER,				function(e:MouseEvent):void {					_selection.alpha = 0.5;				}			);			hit.addEventListener(MouseEvent.MOUSE_OUT,				function(e:MouseEvent):void {					_selection.alpha = 0;				}			);			mouseEnabled  = false;			mouseChildren = false;			buttonMode    = true;		}		public function setEnabledState(enabled:Boolean = true, selected:Boolean = false):void {			if (enabled) {				mouseEnabled     = true;				mouseChildren    = true;				_label.textColor = _enabledColor;				_selection.alpha = 0;			}			else {				mouseEnabled     = false;				mouseChildren    = false;				_label.textColor = _disabledColor;				selected ? _selection.alpha = 1 : _selection.alpha = 0;			}		}	}}